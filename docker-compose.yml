# services:
#   backend:
#     build: 
#       context: ./server
#       dockerfile: Dockerfile
#     platform: linux/amd64  # Specify platform for compatibility
#     ports:
#       - "8000:8000"
#     depends_on:
#       - mongo
#     volumes:
#       - ./server:/app
#       - /app/node_modules
#     environment:
#       - MONGO_URI=mongodb://mongo:27017/travelblogger
#       - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}

#   frontend:
#     build: 
#       context: ./client
#       dockerfile: Dockerfile
#     platform: linux/amd64  # Specify platform for compatibility
#     ports:
#       - "5173:5173"
#     depends_on:
#       - backend
#     volumes:
#       - ./client:/app
#       - /app/node_modules

#   mongo:
#     image: mongo:latest
#     container_name: mongo_container
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db

# volumes:
#   mongo-data:

# # services:
# #   backend:
# #     build:
# #       context: ./server
# #       dockerfile: Dockerfile
# #     ports:
# #       - "8000:8000"
# #     depends_on:
# #       - mongo
# #     volumes:
# #       - ./server:/app
# #     environment:
# #       - MONGO_URI=mongodb://mongo:27017/travelblogger
# #       - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}

# #   frontend:
# #     build:
# #       context: ./client
# #       dockerfile: Dockerfile
# #     ports:
# #       - "5173:5173"
# #     depends_on:
# #       - backend
# #     volumes:
# #       - ./client:/app

# #   mongo:
# #     image: mongo:latest
# #     ports:
# #       - "27017:27017"
# #     volumes:
# #       - mongo-data:/data/db

# # volumes:
# #   mongo-data:


services:
  backend:
    image: chathura26322/travelblogger-backend:${BUILD_NUMBER}
    ports:
      - "8000:8000"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017/travelblogger
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}

  frontend:
    image: chathura26322/travelblogger-frontend:${BUILD_NUMBER}
    ports:
      - "5173:5173"
    depends_on:
      - backend

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data: